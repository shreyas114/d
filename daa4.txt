#include<bits/stdc++.h>
using namespace std;

int kpsk(int cap,vector<int>&wt,vector<int>val,int n,vector<int>&final)
{
    vector<vector<int>>dp(n+1,vector<int>(cap+1,0));
    for(int i = 1;i<=n;i++)
    {
        for(int w = 1;w<=cap;w++)
        {
            if(wt[i-1]<=w)
            {
                dp[i][w] = max(dp[i-1][w],dp[i-1][w-wt[i-1]]+val[i-1]);
            }
            else{
                dp[i][w] = dp[i-1][w];
            }
        }
    }
    int w = cap;
    for(int i = n;i>0;i--)
    {
        if(dp[i][w]!=dp[i-1][w])
        {
            final.push_back(i);
            w -= wt[i-1];
        }
    }
    return dp[n][cap];
}

int main()
{
    int n,cap; // no of items and capacity
    cout<<"Items cnt : ";
    cin>>n;
    cout<<"Capacity : ";
    cin>>cap;
    
    vector<int>wt(n);
    vector<int>val(n);

    for(int i =0;i<n;i++)
    {
        cin>>wt[i];
    }
    for(int i = 0;i<n;i++)
    {
        cin>>val[i];
    }
    vector<int>final;
    int ans = kpsk(cap,wt,val,n,final);
    cout<<"Profit : "<<ans<<endl;
    for(auto ele: final)
    {
        cout<<ele<<" ";
    }
    return 0;
    
}